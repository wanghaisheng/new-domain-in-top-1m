name: Historical Data Import to SQLite

on:
  workflow_dispatch:  # 允许手动触发
    inputs:
      start_date:
        description: '开始日期 (YYYY-MM-DD)'
        required: false
        default: '2023-06-01'
      end_date:
        description: '结束日期 (YYYY-MM-DD)'
        required: false
        default: '2024-05-31'
      batch_days:
        description: '每批处理的天数'
        required: false
        default: '5'
      reset_progress:
        description: '重置进度 (true/false)'
        required: false
        default: 'false'
  schedule:
    - cron: '0 * * * *'  # 每小时执行一次

jobs:
  import_historical_data:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史记录，以便访问所有提交

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests pandas matplotlib gitpython

      - name: Create Cache Directories
        run: mkdir -p data\persisted-to-cache
          
      - name: Cache SQLite Database
        id: cache-sqlite
        uses: actions/cache@v3
        with:
          path: data/persisted-to-cache/domain_rank.db
          key: sqlite-database-historical-${{ github.sha }}-${{ github.run_number }}
          restore-keys: |
            sqlite-database-historical-
            sqlite-database-

      - name: Process Historical Data
        run: |
          # 设置重置进度标志
          $RESET_FLAG = ""
          if ("${{ github.event.inputs.reset_progress }}" -eq "true") {
            $RESET_FLAG = "--reset-progress"
          }
          
          # 运行历史数据处理脚本
          echo "处理历史数据..."
          python run_chunked_import.py --process-historical --start-date "${{ github.event.inputs.start_date }}" --end-date "${{ github.event.inputs.end_date }}" --batch-days ${{ github.event.inputs.batch_days }} $RESET_FLAG

      - name: Check Progress
        id: check-progress
        run: |
          # 检查进度文件是否存在
          if (Test-Path -Path "historical_import_progress.json") {
            echo "::set-output name=completed::false"
            echo "历史数据导入尚未完成，将在下次执行时继续"
          } else {
            echo "::set-output name=completed::true"
            echo "历史数据导入已完成"
          }

      - name: Generate Weekly and Monthly Reports
        if: steps.check-progress.outputs.completed == 'true'
        run: |
          # 创建报告目录
          mkdir -p reports\weekly
          mkdir -p reports\monthly
          
          # 运行报告生成脚本
          python rank_change_analyzer_local.py --period both
          
          # 列出生成的报告
          dir reports

      - name: Commit Results
        run: |
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          
          # 添加进度文件
          if (Test-Path -Path "historical_import_progress.json") {
            git add historical_import_progress.json
          }
          
          # 添加新域名文件
          if (Test-Path -Path "new_domains") {
            git add -f new_domains/
          }
          
          # 添加生成的报告
          if (Test-Path -Path "reports") {
            git add -f reports/
          }
          
          # 提交更改
          git commit -m "Update historical data import progress" -m "Processed batch of historical domain data" || echo "No changes to commit"
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main